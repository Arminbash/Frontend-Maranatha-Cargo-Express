@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/Layouts/_EmployeeMainLayout.cshtml";
}

<div class="row">
    <div class="col-xl-12">
        <div class="card card-custom">
            <div class="card-header flex-wrap border-0 pt-6 pb-0">
                <div class="card-title">
                    <h3 class="card-label">
                        Lista de usuarios
                    </h3>
                </div>
                <div class="card-toolbar">
                    <a href="#" class="btn btn-primary font-weight-bolder" data-toggle="modal" data-target="#TipoPersonaModal">
                        <span class="svg-icon svg-icon-md">
                            <!--begin::Svg Icon | path:assets/media/svg/icons/Design/Flatten.svg-->
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                    <rect x="0" y="0" width="24" height="24" />
                                    <circle fill="#000000" cx="9" cy="15" r="6" />
                                    <path d="M8.8012943,7.00241953 C9.83837775,5.20768121 11.7781543,4 14,4 C17.3137085,4 20,6.6862915 20,10 C20,12.2218457 18.7923188,14.1616223 16.9975805,15.1987057 C16.9991904,15.1326658 17,15.0664274 17,15 C17,10.581722 13.418278,7 9,7 C8.93357256,7 8.86733422,7.00080962 8.8012943,7.00241953 Z" fill="#000000" opacity="0.3" />
                                </g>
                            </svg>
                            <!--end::Svg Icon-->
                        </span>Nuevo tipo persona
                    </a>
                    <div class="modal fade" id="TipoPersonaModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Nuevo tipo persona</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i aria-hidden="true" class="ki ki-close"></i>
                                    </button>
                                </div>
                                <div class="modal-body" id="KTClient">
                                    <form class="form" id="kt_TipoPersona">
                                        <div class="card-body">
                                            <div class="form-group">
                                                <label>Tipo de persona:</label>
                                                <input type="text" class="form-control" placeholder="Nombre tipo de persona" name="TipoPersona" id="tipoPersona" />
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-light-primary font-weight-bold" data-dismiss="modal">Cancelar</button>
                                    <button type="button" class="btn btn-primary font-weight-bold" id="kt_TipoPersona_submit">Guardar</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="mb-7">
                    <div class="row align-items-center">
                        <div class="col-lg-9 col-xl-8">
                            <div class="row align-items-center">
                                <div class="col-md-4 my-2 my-md-0">
                                    <div class="input-icon">
                                        <input type="text" class="form-control" placeholder="Buscar" id="kt_datatable_search_query" />
                                        <span>
                                            <i class="flaticon2-search-1 text-muted"></i>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-4 my-2 my-md-0">
                                    <div class="d-flex align-items-center">
                                        <label class="mr-3 mb-0 d-none d-md-block">Estado:</label>
                                        <select class="form-control" id="kt_datatable_search_status">
                                            <option value="">Todos</option>
                                            <option value="true">Activos</option>
                                            <option value="false">Inactivos</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="datatable datatable-bordered datatable-head-custom" id="kt_datatable"></div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="TipoPersonaModalEditar" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Editar tipo persona</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <i aria-hidden="true" class="ki ki-close"></i>
                    </button>
                </div>
                <div class="modal-body" id="ktTipoPersonaEditar">
                    <form class="form" id="kt_TipoPersonaEditar">
                        <div class="card-body">
                            <input type="number" id="idTipoPersonaEditar" hidden />
                            <div class="form-group">
                                <label>Tipo de persona:</label>
                                <input type="text" class="form-control" placeholder="Nombre tipo de persona" name="tipoPersonaEditar" id="tipoPersonaEditar" />
                            </div>
                            <label class="checkbox checkbox-outline checkbox-success checkbox-lg">
                                <input type="checkbox" name="chkEstado" id="chkEstadoTipoPersona"/>
                                <span></span>
                                Estado
                            </label>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light-primary font-weight-bold" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary font-weight-bold" id="kt_TipoPersona_Editar" >Editar</button>
                </div>
            </div>

        </div>
    </div>


</div>
@section scripts {
    <script>
        'use strict';
        var KTDatatableDataLocalDemo = function () {
            var LoadData = function () {
                var datatable = $('#kt_datatable').KTDatatable({
                    data: {
                        type: 'remote',
                        source: {
                            read: {
                                url: '@Url.Action("GetListaTipoPersona", "Person")',
                                map: function (raw) {
                                    var dataSet = raw;
                                    if (typeof raw.data !== 'undefined') {
                                        dataSet = raw.data;
                                    }
                                    return dataSet;
                                },
                            },
                        },
                        pageSize: 10,
                        serverPaging: true,
                        serverFiltering: true,
                        serverSorting: true,
                    },

                    layout: {
                        scroll: false,
                        footer: false,
                    },

                    sortable: true,

                    pagination: true,

                    search: {
                        input: $('#kt_datatable_search_query'),
                        key: 'generalSearch',
                    },

                    columns: [{
                        field: 'Id',
                        title: '#',
                        sortable: false,
                        width: 20,
                        type: 'number',
                        selector: true,
                        textAlign: 'center',
                    }, {
                        field: 'Tipo',
                        title: 'Tipo',
                    }, {
                        field: 'Estado',
                        title: 'Estado',
                        template: function (row) {
                            var status = {
                                true: {
                                    'title': 'Activo',
                                    'class': ' label-light-success',
                                },
                                false: {
                                    'title': 'Inactivo',
                                    'class': ' label-light-danger',
                                }
                            };
                            return '<span class="label font-weight-bold label-lg ' + status[row.Estado].class + ' label-inline">' + status[row.Estado].title + '</span>';
                        },
                    }, {
                        field: 'Actions',
                        title: 'Acciones',
                        sortable: false,
                        width: 125,
                        overflow: 'visible',
                        autoHide: false,
                        template: function (row) {
                            return '\
							<a href="javascript:;" class="btn btn-sm btn-clean btn-icon mr-2" title="Editar" onclick="verRegistroEditar('+ row.Id + ',\'' + row.Tipo + '\',' + row.Estado+')">\
	                            <span class="svg-icon svg-icon-md">\
	                                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">\
	                                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\
	                                        <rect x="0" y="0" width="24" height="24"/>\
	                                        <path d="M8,17.9148182 L8,5.96685884 C8,5.56391781 8.16211443,5.17792052 8.44982609,4.89581508 L10.965708,2.42895648 C11.5426798,1.86322723 12.4640974,1.85620921 13.0496196,2.41308426 L15.5337377,4.77566479 C15.8314604,5.0588212 16,5.45170806 16,5.86258077 L16,17.9148182 C16,18.7432453 15.3284271,19.4148182 14.5,19.4148182 L9.5,19.4148182 C8.67157288,19.4148182 8,18.7432453 8,17.9148182 Z" fill="#000000" fill-rule="nonzero"\ transform="translate(12.000000, 10.707409) rotate(-135.000000) translate(-12.000000, -10.707409) "/>\
	                                        <rect fill="#000000" opacity="0.3" x="5" y="20" width="15" height="2" rx="1"/>\
	                                    </g>\
	                                </svg>\
	                            </span>\
							</a>\
							<a href="javascript:;" class="btn btn-sm btn-clean btn-icon" title="Eliminar" onclick="eliminarRegistro('+ row.Id +')">\
	                            <span class="svg-icon svg-icon-md">\
	                                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">\
	                                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\
	                                        <rect x="0" y="0" width="24" height="24"/>\
	                                        <path d="M6,8 L6,20.5 C6,21.3284271 6.67157288,22 7.5,22 L16.5,22 C17.3284271,22 18,21.3284271 18,20.5 L18,8 L6,8 Z" fill="#000000" fill-rule="nonzero"/>\
	                                        <path d="M14,4.5 L14,4 C14,3.44771525 13.5522847,3 13,3 L11,3 C10.4477153,3 10,3.44771525 10,4 L10,4.5 L5.5,4.5 C5.22385763,4.5 5,4.72385763 5,5 L5,5.5 C5,5.77614237 5.22385763,6 5.5,6 L18.5,6 C18.7761424,6 19,5.77614237 19,5.5 L19,5 C19,4.72385763 18.7761424,4.5 18.5,4.5 L14,4.5 Z" fill="#000000" opacity="0.3"/>\
	                                    </g>\
	                                </svg>\
	                            </span>\
							</a>\
						';
                        },
                    }],
                });

                $('#kt_datatable_search_status').on('change', function () {
                    datatable.search($(this).val().toLowerCase(), 'Estado');
                });

                $('#kt_datatable_search_status, #kt_datatable_search_type').selectpicker();
            };

            return {
                init: function () {
                    LoadData();
                },
            };
        }();

        jQuery(document).ready(function () {
            KTDatatableDataLocalDemo.init();
        });
        function reloadGrid() {
            location.reload();
        }
    </script>
    <script>
        "use strict";
        var KTClient = function () {
            var _handleClientForm = function () {
                var validation;
                validation = FormValidation.formValidation(
                    KTUtil.getById('kt_TipoPersona'),
                    {
                        fields: {
                            TipoPersona: {
                                validators: {
                                    notEmpty: {
                                        message: 'El nombre de tipo de persona es requerido'
                                    }
                                }
                            },
                        },
                        plugins: {
                            trigger: new FormValidation.plugins.Trigger(),
                            submitButton: new FormValidation.plugins.SubmitButton(),
                            bootstrap: new FormValidation.plugins.Bootstrap()
                        }
                    }
                );
                var validationEditar;
                validationEditar = FormValidation.formValidation(
                    KTUtil.getById('kt_TipoPersonaEditar'),
                    {
                        fields: {
                            tipoPersonaEditar: {
                                validators: {
                                    notEmpty: {
                                        message: 'El nombre de tipo de persona es requerido'
                                    }
                                }
                            },
                        },
                        plugins: {
                            trigger: new FormValidation.plugins.Trigger(),
                            submitButton: new FormValidation.plugins.SubmitButton(),
                            bootstrap: new FormValidation.plugins.Bootstrap()
                        }
                    }
                );
                $('#kt_TipoPersona_submit').on('click', function (e) {
                    e.preventDefault();
                    validation.validate().then(function (status) {
                        if (status == 'Valid') {
                            AddTipoPersona();
                            Limpiar();
                            CerrarModal();
                        } else {
                            swal.fire({
                                text: "Lo sentimos, parece que se han detectado algunos errores, intentalo de nuevo.",
                                icon: "error",
                                buttonsStyling: false,
                                confirmButtonText: "Entiendo!",
                                customClass: {
                                    confirmButton: "btn font-weight-bold btn-light-primary"
                                }
                            }).then(function () {
                                KTUtil.scrollTop();
                            });
                        }
                    });
                });

                $('#kt_TipoPersona_Editar').on('click', function (e) {
                    e.preventDefault();
                    validationEditar.validate().then(function (status) {
                        if (status == 'Valid') {
                            editarRegistro();
                            $("#TipoPersonaModalEditar").modal('toggle');
                        } else {
                            swal.fire({
                                text: "Lo sentimos, parece que se han detectado algunos errores, intentalo de nuevo.",
                                icon: "error",
                                buttonsStyling: false,
                                confirmButtonText: "Entiendo!",
                                customClass: {
                                    confirmButton: "btn font-weight-bold btn-light-primary"
                                }
                            }).then(function () {
                                KTUtil.scrollTop();
                            });
                        }
                    });
                });
            }
            return {
                init: function () {
                    _handleClientForm();
                }
            };
        }();

        jQuery(document).ready(function () {
            KTClient.init();
        });

    </script>
    <script>
        function AddTipoPersona() {
            var tipoPersona = $("#tipoPersona").val();
            var tipoPersonaDto = {
                tipo: tipoPersona
            };
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddTipoPersona", "Person")',
                dataType: 'json',
                data: tipoPersonaDto,
                async:false,
                success: function (data) {
                    swal.fire({
                        text: "se guardo correctamente",
                        icon: "success",
                        buttonsStyling: false,
                        confirmButtonText: "Entiendo!",
                        customClass: {
                            confirmButton: "btn font-weight-bold btn-light-primary"
                        }
                    }).then(function () {
                        KTUtil.scrollTop();
                    });
                },
                error: function (ex) {
                    swal.fire({
                        text: "error al guardar",
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Entiendo!",
                        customClass: {
                            confirmButton: "btn font-weight-bold btn-light-primary"
                        }
                    }).then(function () {
                        KTUtil.scrollTop();
                    });
                }
            });
        }
        function CerrarModal() {
            $('#TipoPersonaModal').modal('toggle');
        }
        function Limpiar() {
            $("#kt_TipoPersona")[0].reset();
            reloadGrid();
        }
        function verRegistroEditar(id, tipo, estado) {
            $("#idTipoPersonaEditar").val(id);
            $("#tipoPersonaEditar").val(tipo);
            $("#chkEstadoTipoPersona").prop('checked',estado);
            $("#TipoPersonaModalEditar").modal("show");
        }
        function editarRegistro() {
            var tipoPersonaDto = {
                Id : $("#idTipoPersonaEditar").val(),
                Tipo :$("#tipoPersonaEditar").val(),
                Estado: $('#chkEstadoTipoPersona').prop('checked')
            };
            $.ajax({
                type: 'POST',
                url: '@Url.Action("EditarTipoPersona", "Person")',
                dataType: 'json',
                data: tipoPersonaDto,
                async:false,
                success: function (data) {
                    swal.fire({
                        text: "se edito correctamente",
                        icon: "success",
                        buttonsStyling: false,
                        confirmButtonText: "Entiendo!",
                        customClass: {
                            confirmButton: "btn font-weight-bold btn-light-primary"
                        }
                    }).then(function () {
                        KTUtil.scrollTop();
                        reloadGrid();
                    });
                },
                error: function (ex) {
                    swal.fire({
                        text: "error al editar",
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Entiendo!",
                        customClass: {
                            confirmButton: "btn font-weight-bold btn-light-primary"
                        }
                    }).then(function () {
                        KTUtil.scrollTop();
                    });
                }
            });
        }
        function eliminarRegistro(id) {
            Swal.fire({
                title: "Esta seguro que desea borrar?",
                text: "Se desactivara el registro",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Eliminar",
                cancelButtonText: "Cancelar"
            }).then(function (result) {
                if (result.value) {
                    var jqXHR = $.ajax({
                            type: 'POST',
                            url: '@Url.Action("EliminarTipoPersona", "Person")?Id='+id,
                            dataType: 'json',
                            async:false,
                        success: function (data) {
                            },
                            error: function (ex) {
                            }
                    });
                    jqXHR.responseJSON;
                    Swal.fire(
                        "Borrado!",
                        "Se dejo inactivo el registro.",
                        "Ok"
                    ).then(function (result) { reloadGrid(); });
                }
            });
        }
    </script>
}